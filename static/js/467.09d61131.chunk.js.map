{"version":3,"file":"static/js/467.09d61131.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.scss?8fca","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.scss?19fd","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.scss?2927","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.scss?88ee","components/Phonebook/Phonebook.jsx"],"sourcesContent":["export const selectContacts = store => store.contacts.contacts;\nexport const selectFilter = store => store.contacts.filter;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"formFlex\":\"ContactForm_formFlex__Yl25J\",\"labelText\":\"ContactForm_labelText__9evFA\",\"inputStyles\":\"ContactForm_inputStyles__Dt7cJ\",\"submitButton\":\"ContactForm_submitButton__KmKm9\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from '../ContactForm/ContactForm.module.scss';\n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const noDuplicates = ({ name }) => {\n    const result = contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n    return result;\n  };\n\n  const addConctacts = data => {\n    \n    if (noDuplicates(data)) {\n      return toast.warn(`${data.name} is already in contacts.`)      \n    }\n    toast.success('Contact added')\n    dispatch(addContact({ ...data })) && setName('');\n    setNumber('');;\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;      \n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addConctacts({ name, number });\n    \n  };\n\n  return (\n    <form className={css.formFlex} onSubmit={handleSubmit}>\n      <label className={css.labelText}>\n        Name        \n      </label>\n      <input\n        className={css.inputStyles}        \n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <div className={css.formFlex}>\n        <label className={css.labelText}>\n          Number          \n        </label>\n        <input\n          className={css.inputStyles}          \n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\" className={css.submitButton}>\n        Add contact\n      </button>\n      <ToastContainer autoClose={1000} theme=\"colored\" />\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__lfyFV\",\"labelText\":\"ContactList_labelText__xoa7V\",\"submitButton\":\"ContactList_submitButton__ZAw4L\",\"deleteButton\":\"ContactList_deleteButton__rx7WF\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { removeContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport css from '../ContactList/ContactList.module.scss';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normilizedFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(contact => {\n      const normilizeName = contact.name.toLowerCase();\n\n      const result = normilizeName.includes(normilizedFilter);\n\n      return result;\n    });\n    return filteredContacts;\n  };\n\n  const deleteContact = id => {\n    dispatch(removeContact(id));\n    toast.info('Contact deleted');\n  };\n\n  const filteredContactsList = filteredContacts();\n\n  const elements = filteredContactsList.map(contact => {\n    return (\n      <li key={contact.id} className={css.contactList}>\n        {contact.name}: {contact.number}\n        <button\n          className={(css.submitButton, css.deleteButton)}\n          onClick={() => deleteContact(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n  return (\n    <div>\n      <ul className={css.labelText}>{elements.length === 0 ? '' : elements}</ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterFlex\":\"Filter_filterFlex__34AHw\",\"labelText\":\"Filter_labelText__8qZob\",\"inputStyles\":\"Filter_inputStyles__NDQTe\"};","import React from 'react';\nimport css from '../Filter/Filter.module.scss';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const searchContact = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n  return (\n    <div>\n      <label className={(css.labelText, css.filterFlex)}>\n        Find contacts by name:\n        <input\n          className={css.inputStyles}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={searchContact}\n        />\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Phonebook_wrapper__cfR7V\",\"mainWrapper\":\"Phonebook_mainWrapper__D-Fap\",\"mainTitle\":\"Phonebook_mainTitle__MoTpV\",\"title\":\"Phonebook_title__mhwvS\"};","import { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectLoading } from 'redux/contacts/contactsSelectors.js';\nimport ContactForm from '../ContactForm/ContactForm.jsx';\nimport ContactList from '../ContactList/ContactList.jsx';\nimport Filter from '../Filter/Filter';\nimport css from '../Phonebook/Phonebook.module.scss';\n\nimport React from 'react';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <div className={css.wrapper}>\n        <h1 className={css.mainTitle}>Phonebook</h1>\n        <div className={css.mainWrapper}>\n          <ContactForm />\n        </div>\n        <div>\n          <h2 className={css.title}>Contacts</h2>\n          <Filter />\n          {isLoading && <h1>Loading...</h1>}\n          <ContactList />\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["selectContacts","store","contacts","selectFilter","filter","selectLoading","state","isLoading","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","addConctacts","data","find","item","toLowerCase","noDuplicates","toast","addContact","handleChange","e","target","value","className","css","onSubmit","preventDefault","type","pattern","title","required","onChange","autoClose","theme","ContactList","filteredContactsList","normilizedFilter","filteredContacts","contact","includes","elements","map","onClick","id","removeContact","length","Filter","filterContacts","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}