{"version":3,"file":"static/js/129.15d542a8.chunk.js","mappings":"0OACA,G,OAA0B,+BAA1B,EAA+D,2BAA/D,EAAkG,4BAAlG,EAAsI,4BAAtI,EAAiL,mC,SCMlK,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEL,EAQD,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,gCACA,kBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACFC,EAAAA,GAAAA,QAAc,oBACdV,GAASW,EAAAA,EAAAA,IAAS,CAAEjB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAClC,EAKiCO,UAAWC,EAAUM,aAAa,KAAhE,WACE,mBAAOP,UAAWC,EAAlB,kBAEE,kBAAOO,KAAK,OAAOnB,KAAK,OAAOU,MAAOV,EAAMoB,SAAUZ,QAGxD,mBAAOG,UAAWC,EAAlB,mBAEE,kBACEO,KAAK,QACLnB,KAAK,QACLU,MAAOR,EACPkB,SAAUZ,QAId,mBAAOG,UAAWC,EAAlB,sBAEE,kBACEO,KAAK,WACLnB,KAAK,WACLU,MAAON,EACPgB,SAAUZ,QAId,mBAAQW,KAAK,SAASR,UAAWC,EAAjC,uBAGA,SAAC,KAAD,CAAgBS,UAAW,IAAMC,MAAM,iBAI9C,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/RegisterPage/RegisterPage.module.scss?c6fb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"RegisterPage_wrapper__5x0IY\",\"form\":\"RegisterPage_form__2uFZs\",\"label\":\"RegisterPage_label__CpdzA\",\"title\":\"RegisterPage_title__Ncou-\",\"submitButton\":\"RegisterPage_submitButton__2XcVi\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from '../RegisterPage/RegisterPage.module.scss';\n\nexport default function RegisterPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success('Account register');\n    dispatch(register({ name, email, password }));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h1 className={css.title}>Registration Page</h1>\n      <form onSubmit={handleSubmit} className={css.form} autoComplete=\"on\">\n        <label className={css.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label className={css.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={css.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.submitButton}>\n          Register\n        </button>\n        <ToastContainer autoClose={1000} theme=\"colored\" />\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","value","className","css","onSubmit","e","preventDefault","toast","register","autoComplete","type","onChange","autoClose","theme"],"sourceRoot":""}